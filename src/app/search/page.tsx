"use client"

import Image from "next/image";
import { useEffect, useState } from "react";
import useSWR from "swr";
import { useSearchParams } from "next/navigation"

type Video = {
    "type": string,
    "title": string,
    "videoId": string,
    "author": string,
    "authorId": string,
    "authorUrl": string,
    "authorVerified": boolean,
    "videoThumbnails": [
        {
            "quality": string,
            "url": string
            "width": number,
            "height": number
        }
    ],
    "description": string,
    "descriptionHTML": string,
    "viewCount": number,
    "viewCountText": string,
    "published": number,
    "publishedText": string,
    "lengthSeconds": number,
    "liveNow": boolean,
    "premium": boolean,
    "isUpcoming": boolean
}

type Channel = {
    "type": string,
    "author": string,
    "authorId": string,
    "authorUrl": string,
    "authorVerified": boolean,
    "authorThumbnails": [
        {
            "quality": string,
            "url": string
            "width": number,
            "height": number
        }
    ],
    "autoGenerated": boolean,
    "subCount": number,
    "videoCount": number,
    "channelHandle": string,
    "description": string,
    "descriptionHtml": string
}

type Playlist = {
    "type": string,
    "title": string,
    "playlistId": string,
    "playlistThumbnail": string,
    "author": string,
    "authorId": string,
    "authorVerified": boolean,
    "videoCount": number,
    "videos": [
        {
            "title": string,
            "videoId": string,
            "lengthSeconds": number,
            "videoThumbnails": [
                {
                    "quality": string,
                    "url": string
                    "width": number,
                    "height": number
                }
            ]
        }
    ]
}

type searchResult = (Video | Channel | Playlist)[];

async function fetcher(key: string) {
    return fetch(key).then((res) => res.json() as Promise<searchResult | null>);
}



export default function Home() {
    const params = useSearchParams();
    const [word, setWord] = useState(params.get("q"));
    let page = 1;
    const { data, error, isLoading } = useSWR(
        (`/api/s?q=` + word + "&p=" + page),
        fetcher
    )

    console.log(location.host + "/api/s?q=" + word + "&p=" + page);

    return (
        <main className="flex min-h-screen flex-col items-center justify-between p-24">
            <h1 className="text-3xl">{word}</h1>
        </main>
    );
}
